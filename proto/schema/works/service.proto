syntax = "proto3";

package proto.schema.works;

import "google/protobuf/empty.proto";
import "proto/schema/works/schema/works/resource.proto";
import "proto/schema/works/schema/comments/resource.proto";
import "proto/schema/works/schema/favorite/resource.proto";
import "proto/schema/works/model/model.proto";
import "proto/third_party/google/api/annotations.proto";


option go_package = "./";

service WorksService {
  rpc GetWorks(.works.schema.works.GetWorksRequest) returns (.works.schema.works.GetWorksResponse) {
    option (google.api.http) = {
      get: "/api/v1/works"
    };
  }

  rpc CreateWork(.works.schema.works.CreateWorkRequest) returns (proto.schema.works.model.Work) {
    option (google.api.http) = {
      post: "/api/v1/works"
      body: "*"
    };

  }

  rpc GetWork(.works.schema.works.GetWorkRequest) returns (proto.schema.works.model.Work) {
    option (google.api.http) = {
      get: "/api/v1/works/{work_id}"
    };
  }

  rpc UpdateWork(.works.schema.works.UpdateWorkRequest) returns (proto.schema.works.model.Work) {
    option (google.api.http) = {
      put: "/api/v1/works/{work_id}"
      body: "*"
    };
  }

  rpc DeleteWork(.works.schema.works.DeleteWorkRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/works/{work_id}"
    };
  }
  rpc CreateComment(.works.schema.comments.PostCommentRequest) returns (model.Comment) {
    option (google.api.http) = {
      post: "/api/v1/works/{work_id}/comments"
      body: "*"
    };
  }


  rpc DeleteComment(.works.schema.comments.DeleteCommentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/works/{work_id}/comments/{comment_id}"
    };
  }


  rpc GetComments(.works.schema.comments.GetCommentsRequest) returns (.works.schema.comments.GetCommentsResponse) {
    option (google.api.http) = {
      get: "/api/v1/works/{work_id}/comments"
    };
  }


  rpc GetReplyComments(.works.schema.comments.GetReplyCommentsRequest) returns (.works.schema.comments.GetCommentsResponse) {
    option (google.api.http) = {
      get: "/api/v1/works/{work_id}/comments/{comment_id}"
      response_body: "comments"
    };
  }

  rpc GetWorkFavorite(.works.schema.favorite.GetWorkFavoriteRequest) returns (.works.schema.favorite.GetWorkFavoriteResponse) {
    option (google.api.http) = {
      get: "/api/v1/works/{work_id}/favorite"
    };
  }

  rpc CreateWorkFavorite(.works.schema.favorite.PostWorkFavoriteRequest) returns (.works.schema.favorite.PostWorkFavoriteResponse) {
    option (google.api.http) = {
      post: "/api/v1/works/{work_id}/favorite"
      body: "*"
    };
  }

  rpc DeleteWorkFavorite(.works.schema.favorite.DeleteWorkFavoriteRequest) returns (.works.schema.favorite.DeleteWorkFavoriteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/works/{work_id}/favorite"
    };
  }
}